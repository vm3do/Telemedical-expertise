<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/pom.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/pom.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;com.example&lt;/groupId&gt;&#10;    &lt;artifactId&gt;Telemedical-expertise&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#10;    &lt;name&gt;Telemedical-expertise&lt;/name&gt;&#10;    &lt;packaging&gt;war&lt;/packaging&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;junit.version&gt;5.13.2&lt;/junit.version&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;&#10;            &lt;version&gt;6.1.0&lt;/version&gt;&#10;            &lt;scope&gt;provided&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.hibernate.orm&lt;/groupId&gt;&#10;            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;&#10;            &lt;version&gt;7.0.4.Final&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.glassfish.jaxb&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jaxb-runtime&lt;/artifactId&gt;&#10;            &lt;version&gt;4.0.5&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;mysql&lt;/groupId&gt;&#10;            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;&#10;            &lt;version&gt;8.0.33&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.mindrot&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jbcrypt&lt;/artifactId&gt;&#10;            &lt;version&gt;0.4&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;javax.persistence&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javax.persistence-api&lt;/artifactId&gt;&#10;            &lt;version&gt;2.2&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;&#10;            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;&#10;            &lt;version&gt;${junit.version}&lt;/version&gt;&#10;            &lt;scope&gt;test&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;&#10;            &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;&#10;            &lt;version&gt;${junit.version}&lt;/version&gt;&#10;            &lt;scope&gt;test&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;        &lt;plugins&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.4.0&lt;/version&gt;&#10;            &lt;/plugin&gt;&#10;        &lt;/plugins&gt;&#10;    &lt;/build&gt;&#10;&lt;/project&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&#10;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#10;         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;&#10;    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;&#10;&#10;    &lt;groupId&gt;com.example&lt;/groupId&gt;&#10;    &lt;artifactId&gt;Telemedical-expertise&lt;/artifactId&gt;&#10;    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&#10;    &lt;name&gt;Telemedical-expertise&lt;/name&gt;&#10;    &lt;packaging&gt;war&lt;/packaging&gt;&#10;&#10;    &lt;properties&gt;&#10;        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&#10;        &lt;maven.compiler.target&gt;17&lt;/maven.compiler.target&gt;&#10;        &lt;maven.compiler.source&gt;17&lt;/maven.compiler.source&gt;&#10;        &lt;junit.version&gt;5.13.2&lt;/junit.version&gt;&#10;    &lt;/properties&gt;&#10;&#10;    &lt;dependencies&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;jakarta.servlet&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jakarta.servlet-api&lt;/artifactId&gt;&#10;            &lt;version&gt;6.1.0&lt;/version&gt;&#10;            &lt;scope&gt;provided&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;!-- JSTL for JSP --&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jstl&lt;/artifactId&gt;&#10;            &lt;version&gt;1.2&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.hibernate.orm&lt;/groupId&gt;&#10;            &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;&#10;            &lt;version&gt;7.0.4.Final&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.glassfish.jaxb&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jaxb-runtime&lt;/artifactId&gt;&#10;            &lt;version&gt;4.0.5&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;mysql&lt;/groupId&gt;&#10;            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;&#10;            &lt;version&gt;8.0.33&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.mindrot&lt;/groupId&gt;&#10;            &lt;artifactId&gt;jbcrypt&lt;/artifactId&gt;&#10;            &lt;version&gt;0.4&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;javax.persistence&lt;/groupId&gt;&#10;            &lt;artifactId&gt;javax.persistence-api&lt;/artifactId&gt;&#10;            &lt;version&gt;2.2&lt;/version&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;&#10;            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;&#10;            &lt;version&gt;${junit.version}&lt;/version&gt;&#10;            &lt;scope&gt;test&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;        &lt;dependency&gt;&#10;            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;&#10;            &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;&#10;            &lt;version&gt;${junit.version}&lt;/version&gt;&#10;            &lt;scope&gt;test&lt;/scope&gt;&#10;        &lt;/dependency&gt;&#10;    &lt;/dependencies&gt;&#10;&#10;    &lt;build&gt;&#10;        &lt;plugins&gt;&#10;            &lt;plugin&gt;&#10;                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#10;                &lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;&#10;                &lt;version&gt;3.4.0&lt;/version&gt;&#10;            &lt;/plugin&gt;&#10;        &lt;/plugins&gt;&#10;    &lt;/build&gt;&#10;&lt;/project&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/ConsultationDAO.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/ConsultationDAO.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.dao;&#10;&#10;import com.example.telemedicalexpertise.model.Consultation;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public interface ConsultationDAO {&#10;    void save(Consultation consultation);&#10;    void update(Consultation consultation);&#10;    Optional&lt;Consultation&gt; findById(Long id);&#10;    List&lt;Consultation&gt; findAll();&#10;    List&lt;Consultation&gt; findByPatientId(Long patientId);&#10;    List&lt;Consultation&gt; findByGeneralPractitionerId(Long gpId);&#10;    List&lt;Consultation&gt; findByStatus(ConsultationStatus status);&#10;    List&lt;Consultation&gt; findOpenConsultations();&#10;    void delete(Long id);&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/impl/ConsultationDAOImpl.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/impl/ConsultationDAOImpl.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.dao.impl;&#10;&#10;import com.example.telemedicalexpertise.dao.ConsultationDAO;&#10;import com.example.telemedicalexpertise.model.Consultation;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import com.example.telemedicalexpertise.utils.HibernateUtil;&#10;import org.hibernate.Session;&#10;import org.hibernate.Transaction;&#10;import org.hibernate.query.Query;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class ConsultationDAOImpl implements ConsultationDAO {&#10;&#10;    @Override&#10;    public void save(Consultation consultation) {&#10;        Transaction transaction = null;&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            transaction = session.beginTransaction();&#10;            session.persist(consultation);&#10;            transaction.commit();&#10;        } catch (Exception e) {&#10;            if (transaction != null) {&#10;                transaction.rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Error saving consultation: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void update(Consultation consultation) {&#10;        Transaction transaction = null;&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            transaction = session.beginTransaction();&#10;            session.merge(consultation);&#10;            transaction.commit();&#10;        } catch (Exception e) {&#10;            if (transaction != null) {&#10;                transaction.rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Error updating consultation: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public Optional&lt;Consultation&gt; findById(Long id) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Consultation consultation = session.find(Consultation.class, id);&#10;            return Optional.ofNullable(consultation);&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding consultation by id: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; findAll() {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            return session.createQuery(&quot;FROM Consultation ORDER BY createdAt DESC&quot;, Consultation.class).list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding all consultations: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; findByPatientId(Long patientId) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Consultation&gt; query = session.createQuery(&#10;                &quot;FROM Consultation WHERE patient.id = :patientId ORDER BY createdAt DESC&quot;, &#10;                Consultation.class);&#10;            query.setParameter(&quot;patientId&quot;, patientId);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding consultations by patient: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; findByGeneralPractitionerId(Long gpId) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Consultation&gt; query = session.createQuery(&#10;                &quot;FROM Consultation WHERE generalPractitioner.id = :gpId ORDER BY createdAt DESC&quot;, &#10;                Consultation.class);&#10;            query.setParameter(&quot;gpId&quot;, gpId);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding consultations by GP: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; findByStatus(ConsultationStatus status) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Consultation&gt; query = session.createQuery(&#10;                &quot;FROM Consultation WHERE status = :status ORDER BY createdAt DESC&quot;, &#10;                Consultation.class);&#10;            query.setParameter(&quot;status&quot;, status);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding consultations by status: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; findOpenConsultations() {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Consultation&gt; query = session.createQuery(&#10;                &quot;FROM Consultation WHERE status != :closedStatus ORDER BY createdAt DESC&quot;, &#10;                Consultation.class);&#10;            query.setParameter(&quot;closedStatus&quot;, ConsultationStatus.TERMINEE);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding open consultations: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void delete(Long id) {&#10;        Transaction transaction = null;&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            transaction = session.beginTransaction();&#10;            Consultation consultation = session.find(Consultation.class, id);&#10;            if (consultation != null) {&#10;                session.remove(consultation);&#10;            }&#10;            transaction.commit();&#10;        } catch (Exception e) {&#10;            if (transaction != null) {&#10;                transaction.rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Error deleting consultation: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/impl/SpecialistDAOImpl.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/dao/impl/SpecialistDAOImpl.java" />
              <option name="originalContent" value="import org.hibernate.Transaction;&#10;import org.hibernate.query.Query;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class SpecialistDAOImpl implements SpecialistDAO {&#10;&#10;    @Override&#10;    public Optional&lt;Specialist&gt; findById(Long id) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Specialist specialist = session.find(Specialist.class, id);&#10;            return Optional.ofNullable(specialist);&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding specialist by id: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Specialist&gt; findAll() {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            return session.createQuery(&quot;FROM Specialist&quot;, Specialist.class).list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding all specialists: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Specialist&gt; findBySpecialty(Specialty specialty) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Specialist&gt; query = session.createQuery(&#10;                &quot;FROM Specialist WHERE specialty = :specialty ORDER BY consultationTariff ASC&quot;,&#10;                Specialist.class);&#10;            query.setParameter(&quot;specialty&quot;, specialty);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding specialists by specialty: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void update(Specialist specialist) {&#10;        Transaction transaction = null;&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            transaction = session.beginTransaction();&#10;            session.merge(specialist);&#10;            transaction.commit();&#10;        } catch (Exception e) {&#10;            if (transaction != null) {&#10;                transaction.rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Error updating specialist: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;}&#10;package com.example.telemedicalexpertise.model.enums;&#10;&#10;public enum ConsultationStatus {&#10;    EN_COURS,&#10;    EN_ATTENTE_AVIS_SPECIALISTE,&#10;    TERMINEE&#10;}&#10;&#10;" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.dao.impl;&#10;&#10;import com.example.telemedicalexpertise.dao.SpecialistDAO;&#10;import com.example.telemedicalexpertise.model.Specialist;&#10;import com.example.telemedicalexpertise.model.enums.Specialty;&#10;import com.example.telemedicalexpertise.utils.HibernateUtil;&#10;import org.hibernate.Session;&#10;import org.hibernate.Transaction;&#10;import org.hibernate.query.Query;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class SpecialistDAOImpl implements SpecialistDAO {&#10;&#10;    @Override&#10;    public Optional&lt;Specialist&gt; findById(Long id) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Specialist specialist = session.find(Specialist.class, id);&#10;            return Optional.ofNullable(specialist);&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding specialist by id: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Specialist&gt; findAll() {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            return session.createQuery(&quot;FROM Specialist&quot;, Specialist.class).list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding all specialists: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Specialist&gt; findBySpecialty(Specialty specialty) {&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            Query&lt;Specialist&gt; query = session.createQuery(&#10;                &quot;FROM Specialist WHERE specialty = :specialty ORDER BY consultationTariff ASC&quot;,&#10;                Specialist.class);&#10;            query.setParameter(&quot;specialty&quot;, specialty);&#10;            return query.list();&#10;        } catch (Exception e) {&#10;            throw new RuntimeException(&quot;Error finding specialists by specialty: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void update(Specialist specialist) {&#10;        Transaction transaction = null;&#10;        try (Session session = HibernateUtil.getSessionFactory().openSession()) {&#10;            transaction = session.beginTransaction();&#10;            session.merge(specialist);&#10;            transaction.commit();&#10;        } catch (Exception e) {&#10;            if (transaction != null) {&#10;                transaction.rollback();&#10;            }&#10;            throw new RuntimeException(&quot;Error updating specialist: &quot; + e.getMessage(), e);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/model/Consultation.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/model/Consultation.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.model;&#10;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import jakarta.persistence.*;&#10;import java.time.LocalDateTime;&#10;&#10;@Entity&#10;@Table(name = &quot;consultations&quot;)&#10;public class Consultation {&#10;    &#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @ManyToOne&#10;    @JoinColumn(name = &quot;patient_id&quot;, nullable = false)&#10;    private Patient patient;&#10;&#10;    @ManyToOne&#10;    @JoinColumn(name = &quot;general_practitioner_id&quot;, nullable = false)&#10;    private GeneralPractitioner generalPractitioner;&#10;&#10;    @Column(name = &quot;motif&quot;, nullable = false)&#10;    private String motif;&#10;&#10;    @Column(name = &quot;observations&quot;, columnDefinition = &quot;TEXT&quot;)&#10;    private String observations;&#10;&#10;    @Column(name = &quot;diagnostic&quot;, columnDefinition = &quot;TEXT&quot;)&#10;    private String diagnostic;&#10;&#10;    @Column(name = &quot;prescription&quot;, columnDefinition = &quot;TEXT&quot;)&#10;    private String prescription;&#10;&#10;    @Enumerated(EnumType.STRING)&#10;    @Column(name = &quot;status&quot;, nullable = false)&#10;    private ConsultationStatus status;&#10;&#10;    @Column(name = &quot;consultation_cost&quot;)&#10;    private Double consultationCost = 150.0; // Fixed cost: 150 DH&#10;&#10;    @Column(name = &quot;created_at&quot;)&#10;    private LocalDateTime createdAt;&#10;&#10;    @Column(name = &quot;updated_at&quot;)&#10;    private LocalDateTime updatedAt;&#10;&#10;    @Column(name = &quot;closed_at&quot;)&#10;    private LocalDateTime closedAt;&#10;&#10;    @PrePersist&#10;    protected void onCreate() {&#10;        createdAt = LocalDateTime.now();&#10;        updatedAt = LocalDateTime.now();&#10;        if (status == null) {&#10;            status = ConsultationStatus.EN_COURS;&#10;        }&#10;    }&#10;&#10;    @PreUpdate&#10;    protected void onUpdate() {&#10;        updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Constructors&#10;    public Consultation() {}&#10;&#10;    public Consultation(Patient patient, GeneralPractitioner generalPractitioner, String motif) {&#10;        this.patient = patient;&#10;        this.generalPractitioner = generalPractitioner;&#10;        this.motif = motif;&#10;        this.status = ConsultationStatus.EN_COURS;&#10;        this.consultationCost = 150.0;&#10;    }&#10;&#10;    // Getters and Setters&#10;    public Long getId() { return id; }&#10;    public void setId(Long id) { this.id = id; }&#10;&#10;    public Patient getPatient() { return patient; }&#10;    public void setPatient(Patient patient) { this.patient = patient; }&#10;&#10;    public GeneralPractitioner getGeneralPractitioner() { return generalPractitioner; }&#10;    public void setGeneralPractitioner(GeneralPractitioner generalPractitioner) { &#10;        this.generalPractitioner = generalPractitioner; &#10;    }&#10;&#10;    public String getMotif() { return motif; }&#10;    public void setMotif(String motif) { this.motif = motif; }&#10;&#10;    public String getObservations() { return observations; }&#10;    public void setObservations(String observations) { this.observations = observations; }&#10;&#10;    public String getDiagnostic() { return diagnostic; }&#10;    public void setDiagnostic(String diagnostic) { this.diagnostic = diagnostic; }&#10;&#10;    public String getPrescription() { return prescription; }&#10;    public void setPrescription(String prescription) { this.prescription = prescription; }&#10;&#10;    public ConsultationStatus getStatus() { return status; }&#10;    public void setStatus(ConsultationStatus status) { this.status = status; }&#10;&#10;    public Double getConsultationCost() { return consultationCost; }&#10;    public void setConsultationCost(Double consultationCost) { this.consultationCost = consultationCost; }&#10;&#10;    public LocalDateTime getCreatedAt() { return createdAt; }&#10;    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }&#10;&#10;    public LocalDateTime getUpdatedAt() { return updatedAt; }&#10;    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }&#10;&#10;    public LocalDateTime getClosedAt() { return closedAt; }&#10;    public void setClosedAt(LocalDateTime closedAt) { this.closedAt = closedAt; }&#10;&#10;    // Business methods&#10;    public void closeConsultation() {&#10;        this.status = ConsultationStatus.TERMINEE;&#10;        this.closedAt = LocalDateTime.now();&#10;    }&#10;&#10;    public void requestSpecialistOpinion() {&#10;        this.status = ConsultationStatus.EN_ATTENTE_AVIS_SPECIALISTE;&#10;    }&#10;&#10;    public boolean isOpen() {&#10;        return this.status != ConsultationStatus.TERMINEE;&#10;    }&#10;&#10;    public boolean isWaitingForSpecialist() {&#10;        return this.status == ConsultationStatus.EN_ATTENTE_AVIS_SPECIALISTE;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/model/enums/ConsultationStatus.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/model/enums/ConsultationStatus.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.model.enums;&#10;&#10;public enum ConsultationStatus {&#10;    EN_COURS(&quot;En Cours&quot;),&#10;    EN_ATTENTE_AVIS_SPECIALISTE(&quot;En Attente Avis Spécialiste&quot;),&#10;    TERMINEE(&quot;Terminée&quot;);&#10;&#10;    private final String displayName;&#10;&#10;    ConsultationStatus(String displayName) {&#10;        this.displayName = displayName;&#10;    }&#10;&#10;    public String getDisplayName() {&#10;        return displayName;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/service/ConsultationService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/service/ConsultationService.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.service;&#10;&#10;import com.example.telemedicalexpertise.model.Consultation;&#10;import com.example.telemedicalexpertise.model.GeneralPractitioner;&#10;import com.example.telemedicalexpertise.model.Patient;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public interface ConsultationService {&#10;    Consultation createConsultation(Patient patient, GeneralPractitioner gp, String motif, String observations);&#10;    void updateConsultation(Consultation consultation);&#10;    Optional&lt;Consultation&gt; getConsultationById(Long id);&#10;    List&lt;Consultation&gt; getAllConsultations();&#10;    List&lt;Consultation&gt; getConsultationsByPatient(Long patientId);&#10;    List&lt;Consultation&gt; getConsultationsByGeneralPractitioner(Long gpId);&#10;    List&lt;Consultation&gt; getConsultationsByStatus(ConsultationStatus status);&#10;    void closeConsultation(Long consultationId, String diagnostic, String prescription);&#10;    void requestSpecialistOpinion(Long consultationId);&#10;    List&lt;Consultation&gt; getOpenConsultations();&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/service/impl/ConsultationServiceImpl.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/service/impl/ConsultationServiceImpl.java" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.service.impl;&#10;&#10;import com.example.telemedicalexpertise.dao.ConsultationDAO;&#10;import com.example.telemedicalexpertise.dao.impl.ConsultationDAOImpl;&#10;import com.example.telemedicalexpertise.model.Consultation;&#10;import com.example.telemedicalexpertise.model.GeneralPractitioner;&#10;import com.example.telemedicalexpertise.model.Patient;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import com.example.telemedicalexpertise.service.ConsultationService;&#10;&#10;import java.util.List;&#10;import java.util.Optional;&#10;&#10;public class ConsultationServiceImpl implements ConsultationService {&#10;    &#10;    private final ConsultationDAO consultationDAO;&#10;&#10;    public ConsultationServiceImpl() {&#10;        this.consultationDAO = new ConsultationDAOImpl();&#10;    }&#10;&#10;    @Override&#10;    public Consultation createConsultation(Patient patient, GeneralPractitioner gp, String motif, String observations) {&#10;        if (patient == null || gp == null || motif == null || motif.trim().isEmpty()) {&#10;            throw new IllegalArgumentException(&quot;Patient, GP, and motif are required to create a consultation&quot;);&#10;        }&#10;&#10;        Consultation consultation = new Consultation(patient, gp, motif);&#10;        consultation.setObservations(observations);&#10;        consultationDAO.save(consultation);&#10;        return consultation;&#10;    }&#10;&#10;    @Override&#10;    public void updateConsultation(Consultation consultation) {&#10;        if (consultation == null || consultation.getId() == null) {&#10;            throw new IllegalArgumentException(&quot;Consultation must exist to be updated&quot;);&#10;        }&#10;        consultationDAO.update(consultation);&#10;    }&#10;&#10;    @Override&#10;    public Optional&lt;Consultation&gt; getConsultationById(Long id) {&#10;        if (id == null) {&#10;            throw new IllegalArgumentException(&quot;Consultation ID cannot be null&quot;);&#10;        }&#10;        return consultationDAO.findById(id);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; getAllConsultations() {&#10;        return consultationDAO.findAll();&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; getConsultationsByPatient(Long patientId) {&#10;        if (patientId == null) {&#10;            throw new IllegalArgumentException(&quot;Patient ID cannot be null&quot;);&#10;        }&#10;        return consultationDAO.findByPatientId(patientId);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; getConsultationsByGeneralPractitioner(Long gpId) {&#10;        if (gpId == null) {&#10;            throw new IllegalArgumentException(&quot;GP ID cannot be null&quot;);&#10;        }&#10;        return consultationDAO.findByGeneralPractitionerId(gpId);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; getConsultationsByStatus(ConsultationStatus status) {&#10;        if (status == null) {&#10;            throw new IllegalArgumentException(&quot;Status cannot be null&quot;);&#10;        }&#10;        return consultationDAO.findByStatus(status);&#10;    }&#10;&#10;    @Override&#10;    public void closeConsultation(Long consultationId, String diagnostic, String prescription) {&#10;        Optional&lt;Consultation&gt; optConsultation = consultationDAO.findById(consultationId);&#10;        &#10;        if (optConsultation.isEmpty()) {&#10;            throw new IllegalArgumentException(&quot;Consultation not found with ID: &quot; + consultationId);&#10;        }&#10;&#10;        Consultation consultation = optConsultation.get();&#10;        &#10;        if (!consultation.isOpen()) {&#10;            throw new IllegalStateException(&quot;Cannot close a consultation that is already closed&quot;);&#10;        }&#10;&#10;        consultation.setDiagnostic(diagnostic);&#10;        consultation.setPrescription(prescription);&#10;        consultation.closeConsultation();&#10;        &#10;        consultationDAO.update(consultation);&#10;    }&#10;&#10;    @Override&#10;    public void requestSpecialistOpinion(Long consultationId) {&#10;        Optional&lt;Consultation&gt; optConsultation = consultationDAO.findById(consultationId);&#10;        &#10;        if (optConsultation.isEmpty()) {&#10;            throw new IllegalArgumentException(&quot;Consultation not found with ID: &quot; + consultationId);&#10;        }&#10;&#10;        Consultation consultation = optConsultation.get();&#10;        &#10;        if (!consultation.isOpen()) {&#10;            throw new IllegalStateException(&quot;Cannot request specialist opinion for a closed consultation&quot;);&#10;        }&#10;&#10;        consultation.requestSpecialistOpinion();&#10;        consultationDAO.update(consultation);&#10;    }&#10;&#10;    @Override&#10;    public List&lt;Consultation&gt; getOpenConsultations() {&#10;        return consultationDAO.findOpenConsultations();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/servlet/GeneralPractitionerServlet.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/com/example/telemedicalexpertise/servlet/GeneralPractitionerServlet.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.telemedicalexpertise.servlet;&#10;&#10;import com.example.telemedicalexpertise.model.Consultation;&#10;import com.example.telemedicalexpertise.model.GeneralPractitioner;&#10;import com.example.telemedicalexpertise.model.Patient;&#10;import com.example.telemedicalexpertise.model.User;&#10;import com.example.telemedicalexpertise.model.enums.ConsultationStatus;&#10;import com.example.telemedicalexpertise.service.ConsultationService;&#10;import com.example.telemedicalexpertise.service.PatientService;&#10;import com.example.telemedicalexpertise.service.impl.ConsultationServiceImpl;&#10;import com.example.telemedicalexpertise.service.impl.PatientServiceImpl;&#10;import com.example.telemedicalexpertise.dao.impl.PatientDAOImpl;&#10;import jakarta.servlet.ServletException;&#10;import jakarta.servlet.annotation.WebServlet;&#10;import jakarta.servlet.http.HttpServlet;&#10;import jakarta.servlet.http.HttpServletRequest;&#10;import jakarta.servlet.http.HttpServletResponse;&#10;import jakarta.servlet.http.HttpSession;&#10;&#10;import java.io.IOException;&#10;import java.util.List;&#10;import java.util.Optional;&#10;import java.util.stream.Collectors;&#10;&#10;@WebServlet(&quot;/general&quot;)&#10;public class GeneralPractitionerServlet extends HttpServlet {&#10;&#10;    private final ConsultationService consultationService;&#10;    private final PatientService patientService;&#10;&#10;    public GeneralPractitionerServlet() {&#10;        this.consultationService = new ConsultationServiceImpl();&#10;        this.patientService = new PatientServiceImpl(new PatientDAOImpl());&#10;    }&#10;&#10;    @Override&#10;    protected void doGet(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        HttpSession session = request.getSession(false);&#10;        if (session == null || session.getAttribute(&quot;user&quot;) == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;&#10;        User user = (User) session.getAttribute(&quot;user&quot;);&#10;        if (!(user instanceof GeneralPractitioner)) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;&#10;        GeneralPractitioner gp = (GeneralPractitioner) user;&#10;        String action = request.getParameter(&quot;action&quot;);&#10;&#10;        try {&#10;            if (action == null || action.equals(&quot;dashboard&quot;)) {&#10;                showDashboard(request, response, gp);&#10;            } else if (action.equals(&quot;viewQueue&quot;)) {&#10;                viewWaitingQueue(request, response);&#10;            } else if (action.equals(&quot;newConsultation&quot;)) {&#10;                showNewConsultationForm(request, response);&#10;            } else if (action.equals(&quot;viewConsultation&quot;)) {&#10;                viewConsultation(request, response, gp);&#10;            } else if (action.equals(&quot;myConsultations&quot;)) {&#10;                viewMyConsultations(request, response, gp);&#10;            } else {&#10;                showDashboard(request, response, gp);&#10;            }&#10;        } catch (Exception e) {&#10;            request.setAttribute(&quot;error&quot;, &quot;An error occurred: &quot; + e.getMessage());&#10;            request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void doPost(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        HttpSession session = request.getSession(false);&#10;        if (session == null || session.getAttribute(&quot;user&quot;) == null) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;&#10;        User user = (User) session.getAttribute(&quot;user&quot;);&#10;        if (!(user instanceof GeneralPractitioner)) {&#10;            response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;            return;&#10;        }&#10;&#10;        GeneralPractitioner gp = (GeneralPractitioner) user;&#10;        String action = request.getParameter(&quot;action&quot;);&#10;&#10;        try {&#10;            if (action != null &amp;&amp; action.equals(&quot;createConsultation&quot;)) {&#10;                createConsultation(request, response, gp);&#10;            } else if (action != null &amp;&amp; action.equals(&quot;updateConsultation&quot;)) {&#10;                updateConsultation(request, response, gp);&#10;            } else if (action != null &amp;&amp; action.equals(&quot;closeConsultation&quot;)) {&#10;                closeConsultation(request, response);&#10;            } else {&#10;                response.sendRedirect(request.getContextPath() + &quot;/general&quot;);&#10;            }&#10;        } catch (Exception e) {&#10;            request.setAttribute(&quot;error&quot;, &quot;An error occurred: &quot; + e.getMessage());&#10;            request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;        }&#10;    }&#10;&#10;    private void showDashboard(HttpServletRequest request, HttpServletResponse response, &#10;                               GeneralPractitioner gp) throws ServletException, IOException {&#10;        &#10;        // Get waiting queue patients (using Stream API)&#10;        List&lt;Patient&gt; waitingPatients = patientService.getPatientsInWaitingQueue()&#10;                .stream()&#10;                .sorted((p1, p2) -&gt; {&#10;                    if (p1.getRegisteredAt() == null) return 1;&#10;                    if (p2.getRegisteredAt() == null) return -1;&#10;                    return p1.getRegisteredAt().compareTo(p2.getRegisteredAt());&#10;                })&#10;                .collect(Collectors.toList());&#10;&#10;        // Get GP's recent consultations&#10;        List&lt;Consultation&gt; recentConsultations = consultationService&#10;                .getConsultationsByGeneralPractitioner(gp.getId())&#10;                .stream()&#10;                .limit(10)&#10;                .collect(Collectors.toList());&#10;&#10;        request.setAttribute(&quot;waitingPatients&quot;, waitingPatients);&#10;        request.setAttribute(&quot;recentConsultations&quot;, recentConsultations);&#10;        request.setAttribute(&quot;gp&quot;, gp);&#10;        &#10;        request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private void viewWaitingQueue(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        // Using Stream API to filter and sort patients by registration time&#10;        List&lt;Patient&gt; waitingPatients = patientService.getPatientsInWaitingQueue()&#10;                .stream()&#10;                .filter(Patient::getInWaitingQueue)&#10;                .sorted((p1, p2) -&gt; {&#10;                    if (p1.getRegisteredAt() == null) return 1;&#10;                    if (p2.getRegisteredAt() == null) return -1;&#10;                    return p1.getRegisteredAt().compareTo(p2.getRegisteredAt());&#10;                })&#10;                .collect(Collectors.toList());&#10;&#10;        request.setAttribute(&quot;waitingPatients&quot;, waitingPatients);&#10;        request.setAttribute(&quot;viewMode&quot;, &quot;queue&quot;);&#10;        request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private void showNewConsultationForm(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        String patientIdStr = request.getParameter(&quot;patientId&quot;);&#10;        &#10;        if (patientIdStr != null &amp;&amp; !patientIdStr.isEmpty()) {&#10;            Long patientId = Long.parseLong(patientIdStr);&#10;            Optional&lt;Patient&gt; patient = patientService.findPatientById(patientId);&#10;            &#10;            if (patient.isPresent()) {&#10;                request.setAttribute(&quot;patient&quot;, patient.get());&#10;            } else {&#10;                request.setAttribute(&quot;error&quot;, &quot;Patient not found&quot;);&#10;            }&#10;        }&#10;&#10;        request.setAttribute(&quot;viewMode&quot;, &quot;newConsultation&quot;);&#10;        request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private void createConsultation(HttpServletRequest request, HttpServletResponse response, &#10;                                   GeneralPractitioner gp) throws ServletException, IOException {&#10;        &#10;        String patientIdStr = request.getParameter(&quot;patientId&quot;);&#10;        String motif = request.getParameter(&quot;motif&quot;);&#10;        String observations = request.getParameter(&quot;observations&quot;);&#10;&#10;        if (patientIdStr == null || motif == null || motif.trim().isEmpty()) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Patient and motif are required&quot;);&#10;            showNewConsultationForm(request, response);&#10;            return;&#10;        }&#10;&#10;        Long patientId = Long.parseLong(patientIdStr);&#10;        Optional&lt;Patient&gt; optPatient = patientService.findPatientById(patientId);&#10;&#10;        if (optPatient.isEmpty()) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Patient not found&quot;);&#10;            showNewConsultationForm(request, response);&#10;            return;&#10;        }&#10;&#10;        Patient patient = optPatient.get();&#10;        &#10;        // Create consultation&#10;        Consultation consultation = consultationService.createConsultation(patient, gp, motif, observations);&#10;        &#10;        // Remove patient from waiting queue&#10;        patient.setInWaitingQueue(false);&#10;        patientService.updatePatient(patient);&#10;&#10;        request.setAttribute(&quot;success&quot;, &quot;Consultation created successfully&quot;);&#10;        response.sendRedirect(request.getContextPath() + &quot;/general?action=viewConsultation&amp;id=&quot; + consultation.getId());&#10;    }&#10;&#10;    private void updateConsultation(HttpServletRequest request, HttpServletResponse response, &#10;                                   GeneralPractitioner gp) throws ServletException, IOException {&#10;        &#10;        String consultationIdStr = request.getParameter(&quot;consultationId&quot;);&#10;        String observations = request.getParameter(&quot;observations&quot;);&#10;        String diagnostic = request.getParameter(&quot;diagnostic&quot;);&#10;        String prescription = request.getParameter(&quot;prescription&quot;);&#10;&#10;        if (consultationIdStr == null) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Consultation ID is required&quot;);&#10;            showDashboard(request, response, gp);&#10;            return;&#10;        }&#10;&#10;        Long consultationId = Long.parseLong(consultationIdStr);&#10;        Optional&lt;Consultation&gt; optConsultation = consultationService.getConsultationById(consultationId);&#10;&#10;        if (optConsultation.isEmpty()) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Consultation not found&quot;);&#10;            showDashboard(request, response, gp);&#10;            return;&#10;        }&#10;&#10;        Consultation consultation = optConsultation.get();&#10;        &#10;        if (observations != null) {&#10;            consultation.setObservations(observations);&#10;        }&#10;        if (diagnostic != null) {&#10;            consultation.setDiagnostic(diagnostic);&#10;        }&#10;        if (prescription != null) {&#10;            consultation.setPrescription(prescription);&#10;        }&#10;&#10;        consultationService.updateConsultation(consultation);&#10;&#10;        request.setAttribute(&quot;success&quot;, &quot;Consultation updated successfully&quot;);&#10;        response.sendRedirect(request.getContextPath() + &quot;/general?action=viewConsultation&amp;id=&quot; + consultationId);&#10;    }&#10;&#10;    private void closeConsultation(HttpServletRequest request, HttpServletResponse response) &#10;            throws ServletException, IOException {&#10;        &#10;        String consultationIdStr = request.getParameter(&quot;consultationId&quot;);&#10;        String diagnostic = request.getParameter(&quot;diagnostic&quot;);&#10;        String prescription = request.getParameter(&quot;prescription&quot;);&#10;&#10;        if (consultationIdStr == null || diagnostic == null || diagnostic.trim().isEmpty()) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Consultation ID and diagnostic are required&quot;);&#10;            response.sendRedirect(request.getContextPath() + &quot;/general&quot;);&#10;            return;&#10;        }&#10;&#10;        Long consultationId = Long.parseLong(consultationIdStr);&#10;        consultationService.closeConsultation(consultationId, diagnostic, prescription);&#10;&#10;        request.setAttribute(&quot;success&quot;, &quot;Consultation closed successfully&quot;);&#10;        response.sendRedirect(request.getContextPath() + &quot;/general&quot;);&#10;    }&#10;&#10;    private void viewConsultation(HttpServletRequest request, HttpServletResponse response, &#10;                                 GeneralPractitioner gp) throws ServletException, IOException {&#10;        &#10;        String consultationIdStr = request.getParameter(&quot;id&quot;);&#10;        &#10;        if (consultationIdStr == null) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Consultation ID is required&quot;);&#10;            showDashboard(request, response, gp);&#10;            return;&#10;        }&#10;&#10;        Long consultationId = Long.parseLong(consultationIdStr);&#10;        Optional&lt;Consultation&gt; optConsultation = consultationService.getConsultationById(consultationId);&#10;&#10;        if (optConsultation.isEmpty()) {&#10;            request.setAttribute(&quot;error&quot;, &quot;Consultation not found&quot;);&#10;            showDashboard(request, response, gp);&#10;            return;&#10;        }&#10;&#10;        Consultation consultation = optConsultation.get();&#10;        request.setAttribute(&quot;consultation&quot;, consultation);&#10;        request.setAttribute(&quot;viewMode&quot;, &quot;viewConsultation&quot;);&#10;        request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;    }&#10;&#10;    private void viewMyConsultations(HttpServletRequest request, HttpServletResponse response, &#10;                                    GeneralPractitioner gp) throws ServletException, IOException {&#10;        &#10;        String statusFilter = request.getParameter(&quot;status&quot;);&#10;        &#10;        List&lt;Consultation&gt; consultations = consultationService&#10;                .getConsultationsByGeneralPractitioner(gp.getId());&#10;&#10;        // Using Stream API to filter by status if provided&#10;        if (statusFilter != null &amp;&amp; !statusFilter.isEmpty() &amp;&amp; !statusFilter.equals(&quot;ALL&quot;)) {&#10;            ConsultationStatus status = ConsultationStatus.valueOf(statusFilter);&#10;            consultations = consultations.stream()&#10;                    .filter(c -&gt; c.getStatus() == status)&#10;                    .collect(Collectors.toList());&#10;        }&#10;&#10;        request.setAttribute(&quot;consultations&quot;, consultations);&#10;        request.setAttribute(&quot;viewMode&quot;, &quot;myConsultations&quot;);&#10;        request.getRequestDispatcher(&quot;/WEB-INF/jsp/general.jsp&quot;).forward(request, response);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/resources/hibernate.cfg.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/resources/hibernate.cfg.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE hibernate-configuration PUBLIC&#10;        &quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;&#10;        &quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;&#10;&#10;&lt;hibernate-configuration&gt;&#10;    &lt;session-factory&gt;&#10;        &lt;!-- Database connection settings --&gt;&#10;        &lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.cj.jdbc.Driver&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3306/telemedical_db?useSSL=false&amp;amp;serverTimezone=UTC&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.username&quot;&gt;root&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.password&quot;&gt;NewPass123!&lt;/property&gt;&#10;        &#10;        &lt;!-- Hibernate settings --&gt;&#10;        &lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.show_sql&quot;&gt;true&lt;/property&gt;&#10;        &#10;        &lt;!-- Mapping classes --&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.User&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Nurse&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.GeneralPractitioner&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Specialist&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Patient&quot;/&gt;&#10;    &lt;/session-factory&gt;&#10;&lt;/hibernate-configuration&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;!DOCTYPE hibernate-configuration PUBLIC&#10;        &quot;-//Hibernate/Hibernate Configuration DTD 3.0//EN&quot;&#10;        &quot;http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd&quot;&gt;&#10;&#10;&lt;hibernate-configuration&gt;&#10;    &lt;session-factory&gt;&#10;        &lt;!-- Database connection settings --&gt;&#10;        &lt;property name=&quot;hibernate.connection.driver_class&quot;&gt;com.mysql.cj.jdbc.Driver&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.url&quot;&gt;jdbc:mysql://localhost:3306/telemedical_db?useSSL=false&amp;amp;serverTimezone=UTC&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.username&quot;&gt;root&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.connection.password&quot;&gt;NewPass123!&lt;/property&gt;&#10;        &#10;        &lt;!-- Hibernate settings --&gt;&#10;        &lt;property name=&quot;hibernate.dialect&quot;&gt;org.hibernate.dialect.MySQLDialect&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.hbm2ddl.auto&quot;&gt;update&lt;/property&gt;&#10;        &lt;property name=&quot;hibernate.show_sql&quot;&gt;true&lt;/property&gt;&#10;        &#10;        &lt;!-- Mapping classes --&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.User&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Nurse&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.GeneralPractitioner&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Specialist&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Patient&quot;/&gt;&#10;        &lt;mapping class=&quot;com.example.telemedicalexpertise.model.Consultation&quot;/&gt;&#10;    &lt;/session-factory&gt;&#10;&lt;/hibernate-configuration&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/webapp/WEB-INF/jsp/general.jsp">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/webapp/WEB-INF/jsp/general.jsp" />
              <option name="originalContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ page import=&quot;com.example.telemedicalexpertise.model.User&quot; %&gt;&#10;&lt;%&#10;    User user = (User) session.getAttribute(&quot;user&quot;);&#10;    if (user == null) {&#10;        response.sendRedirect(&quot;login&quot;);&#10;        return;&#10;    }&#10;%&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;General Practitioner Dashboard - Telemedical Expertise&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;    &lt;script&gt;&#10;        tailwind.config = {&#10;            theme: {&#10;                extend: {&#10;                    colors: {&#10;                        medical: {&#10;                            50: '#f0f9ff',&#10;                            100: '#e0f2fe',&#10;                            200: '#bae6fd',&#10;                            300: '#7dd3fc',&#10;                            400: '#38bdf8',&#10;                            500: '#0ea5e9',&#10;                            600: '#0284c7',&#10;                            700: '#0369a1',&#10;                            800: '#075985',&#10;                            900: '#0c4a6e',&#10;                        }&#10;                    }&#10;                }&#10;            }&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;bg-gradient-to-br from-green-50 to-emerald-100 min-h-screen&quot;&gt;&#10;    &lt;!-- Header --&gt;&#10;    &lt;header class=&quot;bg-white shadow-lg&quot;&gt;&#10;        &lt;div class=&quot;container mx-auto px-4 py-4&quot;&gt;&#10;            &lt;div class=&quot;flex justify-between items-center&quot;&gt;&#10;                &lt;div class=&quot;flex items-center space-x-3&quot;&gt;&#10;                    &lt;div class=&quot;w-12 h-12 bg-green-600 rounded-full flex items-center justify-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-6 h-6 text-white&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h1 class=&quot;text-2xl font-bold text-gray-800&quot;&gt;General Practitioner&lt;/h1&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Patient Consultation &amp; Specialist Referral&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;div class=&quot;text-right&quot;&gt;&#10;                        &lt;p class=&quot;text-sm font-semibold text-gray-800&quot;&gt;Dr. &lt;%= user.getFirstName() %&gt; &lt;%= user.getLastName() %&gt;&lt;/p&gt;&#10;                        &lt;p class=&quot;text-xs text-green-600&quot;&gt;General Practitioner&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;a href=&quot;logout&quot; class=&quot;bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition&quot;&gt;&#10;                        Logout&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;&#10;    &lt;div class=&quot;container mx-auto px-4 py-8&quot;&gt;&#10;        &lt;!-- Stats Cards --&gt;&#10;        &lt;div class=&quot;grid grid-cols-1 md:grid-cols-4 gap-6 mb-8&quot;&gt;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Waiting Queue&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-green-600&quot;&gt;0&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-green-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Today's Consultations&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-blue-600&quot;&gt;0&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-blue-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-blue-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Pending Referrals&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-orange-600&quot;&gt;0&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-orange-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-orange-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Base Fee (DH)&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-purple-600&quot;&gt;150&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-purple-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-purple-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Main Content --&gt;&#10;        &lt;div class=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6&quot;&gt;&#10;            &lt;!-- Patient Queue --&gt;&#10;            &lt;div class=&quot;lg:col-span-1&quot;&gt;&#10;                &lt;div class=&quot;bg-white rounded-xl shadow-md p-6 sticky top-4&quot;&gt;&#10;                    &lt;h2 class=&quot;text-xl font-bold text-gray-800 mb-4 flex items-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-5 h-5 mr-2 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        Patient Queue&#10;                    &lt;/h2&gt;&#10;&#10;                    &lt;div class=&quot;space-y-3 max-h-[600px] overflow-y-auto&quot;&gt;&#10;                        &lt;div class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                            &lt;svg class=&quot;w-16 h-16 mx-auto mb-3 text-gray-300&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            &lt;p class=&quot;text-sm&quot;&gt;No patients in queue&lt;/p&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Consultation Panel --&gt;&#10;            &lt;div class=&quot;lg:col-span-2 space-y-6&quot;&gt;&#10;                &lt;!-- New Consultation Form --&gt;&#10;                &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                    &lt;h2 class=&quot;text-2xl font-bold text-gray-800 mb-6 flex items-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-6 h-6 mr-2 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        New Consultation&#10;                    &lt;/h2&gt;&#10;&#10;                    &lt;form action=&quot;consultation/create&quot; method=&quot;post&quot; class=&quot;space-y-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Select Patient&lt;/label&gt;&#10;                            &lt;select name=&quot;patientId&quot; required class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&#10;                                &lt;option value=&quot;&quot;&gt;Choose from queue...&lt;/option&gt;&#10;                                &lt;!-- Patients will be loaded dynamically --&gt;&#10;                            &lt;/select&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Chief Complaint&lt;/label&gt;&#10;                            &lt;textarea name=&quot;complaint&quot; rows=&quot;3&quot; required placeholder=&quot;Patient's main concern...&quot;&#10;                                      class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;/textarea&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Clinical Examination&lt;/label&gt;&#10;                            &lt;textarea name=&quot;examination&quot; rows=&quot;4&quot; required placeholder=&quot;Physical examination findings...&quot;&#10;                                      class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;/textarea&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Observations&lt;/label&gt;&#10;                            &lt;textarea name=&quot;observations&quot; rows=&quot;3&quot; placeholder=&quot;Additional notes and observations...&quot;&#10;                                      class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;/textarea&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                            &lt;button type=&quot;submit&quot; name=&quot;action&quot; value=&quot;direct&quot;&#10;                                    class=&quot;bg-gradient-to-r from-green-600 to-emerald-600 text-white font-semibold py-3 rounded-lg hover:from-green-700 hover:to-emerald-700 transition&quot;&gt;&#10;                                Diagnose &amp; Prescribe&#10;                            &lt;/button&gt;&#10;                            &lt;button type=&quot;button&quot; onclick=&quot;showReferralModal()&quot;&#10;                                    class=&quot;bg-gradient-to-r from-orange-500 to-red-500 text-white font-semibold py-3 rounded-lg hover:from-orange-600 hover:to-red-600 transition&quot;&gt;&#10;                                Request Specialist&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Specialist Referral Section (Initially Hidden) --&gt;&#10;                &lt;div id=&quot;referralModal&quot; class=&quot;hidden bg-white rounded-xl shadow-md p-6 border-2 border-orange-200&quot;&gt;&#10;                    &lt;h3 class=&quot;text-xl font-bold text-gray-800 mb-4 flex items-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-5 h-5 mr-2 text-orange-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        Specialist Referral&#10;                    &lt;/h3&gt;&#10;&#10;                    &lt;form action=&quot;consultation/refer&quot; method=&quot;post&quot; class=&quot;space-y-4&quot;&gt;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Medical Specialty Required&lt;/label&gt;&#10;                            &lt;select name=&quot;specialty&quot; required onchange=&quot;loadSpecialists(this.value)&quot;&#10;                                    class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500&quot;&gt;&#10;                                &lt;option value=&quot;&quot;&gt;Select specialty...&lt;/option&gt;&#10;                                &lt;option value=&quot;CARDIOLOGY&quot;&gt;Cardiology - Heart and blood vessels&lt;/option&gt;&#10;                                &lt;option value=&quot;PNEUMOLOGY&quot;&gt;Pneumology - Respiratory system&lt;/option&gt;&#10;                                &lt;option value=&quot;NEUROLOGY&quot;&gt;Neurology - Nervous system&lt;/option&gt;&#10;                                &lt;option value=&quot;GASTROENTEROLOGY&quot;&gt;Gastroenterology - Digestive system&lt;/option&gt;&#10;                                &lt;option value=&quot;ENDOCRINOLOGY&quot;&gt;Endocrinology - Hormonal disorders&lt;/option&gt;&#10;                                &lt;option value=&quot;DERMATOLOGY&quot;&gt;Dermatology - Skin diseases&lt;/option&gt;&#10;                                &lt;option value=&quot;RHEUMATOLOGY&quot;&gt;Rheumatology - Joints and bones&lt;/option&gt;&#10;                                &lt;option value=&quot;PSYCHIATRY&quot;&gt;Psychiatry - Mental health&lt;/option&gt;&#10;                                &lt;option value=&quot;NEPHROLOGY&quot;&gt;Nephrology - Kidney diseases&lt;/option&gt;&#10;                                &lt;option value=&quot;ORTHOPEDICS&quot;&gt;Orthopedics - Bone trauma&lt;/option&gt;&#10;                            &lt;/select&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div id=&quot;specialistList&quot; class=&quot;hidden&quot;&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Available Specialists&lt;/label&gt;&#10;                            &lt;div class=&quot;space-y-2 max-h-48 overflow-y-auto border rounded-lg p-3&quot;&gt;&#10;                                &lt;!-- Specialists will be loaded dynamically --&gt;&#10;                                &lt;p class=&quot;text-sm text-gray-500&quot;&gt;Select a specialty to view available specialists&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Priority Level&lt;/label&gt;&#10;                            &lt;select name=&quot;priority&quot; required class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500&quot;&gt;&#10;                                &lt;option value=&quot;NORMAL&quot;&gt;Normal&lt;/option&gt;&#10;                                &lt;option value=&quot;URGENT&quot;&gt;Urgent&lt;/option&gt;&#10;                                &lt;option value=&quot;CRITICAL&quot;&gt;Critical&lt;/option&gt;&#10;                            &lt;/select&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div&gt;&#10;                            &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Question for Specialist&lt;/label&gt;&#10;                            &lt;textarea name=&quot;question&quot; rows=&quot;3&quot; required placeholder=&quot;Describe the clinical question...&quot;&#10;                                      class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-orange-500&quot;&gt;&lt;/textarea&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;grid grid-cols-2 gap-4&quot;&gt;&#10;                            &lt;button type=&quot;button&quot; onclick=&quot;hideReferralModal()&quot;&#10;                                    class=&quot;border-2 border-gray-300 text-gray-700 font-semibold py-3 rounded-lg hover:bg-gray-100 transition&quot;&gt;&#10;                                Cancel&#10;                            &lt;/button&gt;&#10;                            &lt;button type=&quot;submit&quot;&#10;                                    class=&quot;bg-gradient-to-r from-orange-500 to-red-500 text-white font-semibold py-3 rounded-lg hover:from-orange-600 hover:to-red-600 transition&quot;&gt;&#10;                                Send Referral&#10;                            &lt;/button&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/form&gt;&#10;                &lt;/div&gt;&#10;&#10;                &lt;!-- Active Consultations --&gt;&#10;                &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                    &lt;h2 class=&quot;text-xl font-bold text-gray-800 mb-4 flex items-center justify-between&quot;&gt;&#10;                        &lt;span class=&quot;flex items-center&quot;&gt;&#10;                            &lt;svg class=&quot;w-5 h-5 mr-2 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                                &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2&quot;/&gt;&#10;                            &lt;/svg&gt;&#10;                            Active Consultations&#10;                        &lt;/span&gt;&#10;                        &lt;span class=&quot;text-sm bg-green-100 text-green-700 px-3 py-1 rounded-full&quot;&gt;0 Active&lt;/span&gt;&#10;                    &lt;/h2&gt;&#10;&#10;                    &lt;div class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                        &lt;svg class=&quot;w-16 h-16 mx-auto mb-3 text-gray-300&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        &lt;p class=&quot;text-sm&quot;&gt;No active consultations&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&#10;    &lt;script&gt;&#10;        function showReferralModal() {&#10;            document.getElementById('referralModal').classList.remove('hidden');&#10;            document.getElementById('referralModal').scrollIntoView({ behavior: 'smooth' });&#10;        }&#10;&#10;        function hideReferralModal() {&#10;            document.getElementById('referralModal').classList.add('hidden');&#10;        }&#10;&#10;        function loadSpecialists(specialty) {&#10;            const listDiv = document.getElementById('specialistList');&#10;            if (specialty) {&#10;                listDiv.classList.remove('hidden');&#10;                // In production, this would load specialists via AJAX&#10;            } else {&#10;                listDiv.classList.add('hidden');&#10;            }&#10;        }&#10;    &lt;/script&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
              <option name="updatedContent" value="&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&#10;&lt;%@ page import=&quot;com.example.telemedicalexpertise.model.User&quot; %&gt;&#10;&lt;%@ page import=&quot;com.example.telemedicalexpertise.model.GeneralPractitioner&quot; %&gt;&#10;&lt;%@ page import=&quot;com.example.telemedicalexpertise.model.Patient&quot; %&gt;&#10;&lt;%@ page import=&quot;com.example.telemedicalexpertise.model.Consultation&quot; %&gt;&#10;&lt;%@ page import=&quot;java.util.List&quot; %&gt;&#10;&lt;%@ page import=&quot;java.time.format.DateTimeFormatter&quot; %&gt;&#10;&lt;%&#10;    User user = (User) session.getAttribute(&quot;user&quot;);&#10;    if (user == null || !(user instanceof GeneralPractitioner)) {&#10;        response.sendRedirect(request.getContextPath() + &quot;/login&quot;);&#10;        return;&#10;    }&#10;    GeneralPractitioner gp = (GeneralPractitioner) user;&#10;    &#10;    // Get attributes&#10;    List&lt;Patient&gt; waitingPatients = (List&lt;Patient&gt;) request.getAttribute(&quot;waitingPatients&quot;);&#10;    List&lt;Consultation&gt; recentConsultations = (List&lt;Consultation&gt;) request.getAttribute(&quot;recentConsultations&quot;);&#10;    List&lt;Consultation&gt; consultations = (List&lt;Consultation&gt;) request.getAttribute(&quot;consultations&quot;);&#10;    Consultation consultation = (Consultation) request.getAttribute(&quot;consultation&quot;);&#10;    Patient patient = (Patient) request.getAttribute(&quot;patient&quot;);&#10;    String viewMode = (String) request.getAttribute(&quot;viewMode&quot;);&#10;    String error = (String) request.getAttribute(&quot;error&quot;);&#10;    String success = (String) request.getAttribute(&quot;success&quot;);&#10;    String action = request.getParameter(&quot;action&quot;);&#10;    String status = request.getParameter(&quot;status&quot;);&#10;    &#10;    DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern(&quot;dd/MM/yyyy HH:mm&quot;);&#10;    DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern(&quot;HH:mm&quot;);&#10;%&gt;&#10;&lt;!DOCTYPE html&gt;&#10;&lt;html lang=&quot;en&quot;&gt;&#10;&lt;head&gt;&#10;    &lt;meta charset=&quot;UTF-8&quot;&gt;&#10;    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;&#10;    &lt;title&gt;General Practitioner Dashboard - Telemedical Expertise&lt;/title&gt;&#10;    &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;&#10;&lt;/head&gt;&#10;&lt;body class=&quot;bg-gradient-to-br from-green-50 to-emerald-100 min-h-screen&quot;&gt;&#10;    &lt;!-- Header --&gt;&#10;    &lt;header class=&quot;bg-white shadow-lg&quot;&gt;&#10;        &lt;div class=&quot;container mx-auto px-4 py-4&quot;&gt;&#10;            &lt;div class=&quot;flex justify-between items-center&quot;&gt;&#10;                &lt;div class=&quot;flex items-center space-x-3&quot;&gt;&#10;                    &lt;div class=&quot;w-12 h-12 bg-green-600 rounded-full flex items-center justify-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-6 h-6 text-white&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div&gt;&#10;                        &lt;h1 class=&quot;text-2xl font-bold text-gray-800&quot;&gt;General Practitioner&lt;/h1&gt;&#10;                        &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Patient Consultation Management&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;                &lt;div class=&quot;flex items-center space-x-4&quot;&gt;&#10;                    &lt;div class=&quot;text-right&quot;&gt;&#10;                        &lt;p class=&quot;text-sm font-semibold text-gray-800&quot;&gt;Dr. &lt;%= gp.getFirstName() %&gt; &lt;%= gp.getLastName() %&gt;&lt;/p&gt;&#10;                        &lt;p class=&quot;text-xs text-green-600&quot;&gt;General Practitioner&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/logout&quot; class=&quot;bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg transition&quot;&gt;&#10;                        Logout&#10;                    &lt;/a&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/header&gt;&#10;&#10;    &lt;div class=&quot;container mx-auto px-4 py-8&quot;&gt;&#10;        &lt;!-- Navigation Tabs --&gt;&#10;        &lt;div class=&quot;mb-6 flex space-x-4&quot;&gt;&#10;            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=dashboard&quot; &#10;               class=&quot;px-4 py-2 rounded-lg &lt;%= (action == null || &quot;dashboard&quot;.equals(action)) ? &quot;bg-green-600 text-white&quot; : &quot;bg-white text-gray-700&quot; %&gt;&quot;&gt;&#10;                Dashboard&#10;            &lt;/a&gt;&#10;            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=viewQueue&quot; &#10;               class=&quot;px-4 py-2 rounded-lg &lt;%= &quot;viewQueue&quot;.equals(action) ? &quot;bg-green-600 text-white&quot; : &quot;bg-white text-gray-700&quot; %&gt;&quot;&gt;&#10;                Waiting Queue&#10;            &lt;/a&gt;&#10;            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=myConsultations&quot; &#10;               class=&quot;px-4 py-2 rounded-lg &lt;%= &quot;myConsultations&quot;.equals(action) ? &quot;bg-green-600 text-white&quot; : &quot;bg-white text-gray-700&quot; %&gt;&quot;&gt;&#10;                My Consultations&#10;            &lt;/a&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Success/Error Messages --&gt;&#10;        &lt;% if (success != null) { %&gt;&#10;            &lt;div class=&quot;mb-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded&quot;&gt;&#10;                &lt;%= success %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;        &lt;% if (error != null) { %&gt;&#10;            &lt;div class=&quot;mb-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded&quot;&gt;&#10;                &lt;%= error %&gt;&#10;            &lt;/div&gt;&#10;        &lt;% } %&gt;&#10;&#10;        &lt;!-- Stats Cards --&gt;&#10;        &lt;div class=&quot;grid grid-cols-1 md:grid-cols-4 gap-6 mb-8&quot;&gt;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Waiting Queue&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-green-600&quot;&gt;&lt;%= (waitingPatients != null ? waitingPatients.size() : 0) %&gt;&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-green-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;My Consultations&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-blue-600&quot;&gt;&lt;%= (recentConsultations != null ? recentConsultations.size() : 0) %&gt;&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-blue-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-blue-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Open Cases&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-orange-600&quot;&gt;0&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-orange-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-orange-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                &lt;div class=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;div&gt;&#10;                        &lt;p class=&quot;text-gray-500 text-sm&quot;&gt;Consultation Fee&lt;/p&gt;&#10;                        &lt;p class=&quot;text-3xl font-bold text-purple-600&quot;&gt;150 DH&lt;/p&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;div class=&quot;bg-purple-100 rounded-full p-3&quot;&gt;&#10;                        &lt;svg class=&quot;w-8 h-8 text-purple-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;&#10;        &lt;!-- Main Content Area --&gt;&#10;        &lt;div class=&quot;grid grid-cols-1 lg:grid-cols-3 gap-6&quot;&gt;&#10;            &lt;!-- Patient Queue Sidebar --&gt;&#10;            &lt;div class=&quot;lg:col-span-1&quot;&gt;&#10;                &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                    &lt;h2 class=&quot;text-xl font-bold text-gray-800 mb-4 flex items-center&quot;&gt;&#10;                        &lt;svg class=&quot;w-5 h-5 mr-2 text-green-600&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                            &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z&quot;/&gt;&#10;                        &lt;/svg&gt;&#10;                        Waiting Patients&#10;                    &lt;/h2&gt;&#10;&#10;                    &lt;div class=&quot;space-y-3 max-h-[600px] overflow-y-auto&quot;&gt;&#10;                        &lt;% if (waitingPatients != null &amp;&amp; !waitingPatients.isEmpty()) { %&gt;&#10;                            &lt;% for (Patient p : waitingPatients) { %&gt;&#10;                                &lt;div class=&quot;border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition&quot;&gt;&#10;                                    &lt;div class=&quot;flex justify-between items-start mb-2&quot;&gt;&#10;                                        &lt;div&gt;&#10;                                            &lt;h3 class=&quot;font-semibold text-gray-800&quot;&gt;&lt;%= p.getFullName() %&gt;&lt;/h3&gt;&#10;                                            &lt;p class=&quot;text-xs text-gray-500&quot;&gt;SS: &lt;%= p.getSocialSecurityNumber() %&gt;&lt;/p&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;span class=&quot;text-xs bg-green-100 text-green-700 px-2 py-1 rounded&quot;&gt;Waiting&lt;/span&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div class=&quot;text-xs text-gray-600 space-y-1&quot;&gt;&#10;                                        &lt;% if (p.getRegisteredAt() != null) { %&gt;&#10;                                            &lt;p&gt;⏰ &lt;%= p.getRegisteredAt().format(timeFormatter) %&gt;&lt;/p&gt;&#10;                                        &lt;% } %&gt;&#10;                                        &lt;% if (p.getBloodPressure() != null) { %&gt;&#10;                                            &lt;p&gt; BP: &lt;%= p.getBloodPressure() %&gt;&lt;/p&gt;&#10;                                        &lt;% } %&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=newConsultation&amp;patientId=&lt;%= p.getId() %&gt;&quot; &#10;                                       class=&quot;mt-3 block text-center bg-green-600 text-white py-2 rounded hover:bg-green-700 transition text-sm&quot;&gt;&#10;                                        Start Consultation&#10;                                    &lt;/a&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;% } %&gt;&#10;                        &lt;% } else { %&gt;&#10;                            &lt;div class=&quot;text-center py-8 text-gray-500&quot;&gt;&#10;                                &lt;svg class=&quot;w-16 h-16 mx-auto mb-3 text-gray-300&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                                &lt;p class=&quot;text-sm&quot;&gt;No patients in queue&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;% } %&gt;&#10;                    &lt;/div&gt;&#10;                &lt;/div&gt;&#10;            &lt;/div&gt;&#10;&#10;            &lt;!-- Main Content Panel --&gt;&#10;            &lt;div class=&quot;lg:col-span-2&quot;&gt;&#10;                &lt;% if (&quot;newConsultation&quot;.equals(viewMode)) { %&gt;&#10;                    &lt;!-- New Consultation Form --&gt;&#10;                    &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                        &lt;h2 class=&quot;text-2xl font-bold text-gray-800 mb-6&quot;&gt;New Consultation&lt;/h2&gt;&#10;                        &#10;                        &lt;% if (patient != null) { %&gt;&#10;                            &lt;div class=&quot;mb-6 p-4 bg-blue-50 rounded-lg&quot;&gt;&#10;                                &lt;h3 class=&quot;font-semibold text-gray-800 mb-2&quot;&gt;Patient Information&lt;/h3&gt;&#10;                                &lt;div class=&quot;grid grid-cols-2 gap-4 text-sm&quot;&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;p class=&quot;text-gray-600&quot;&gt;Name: &lt;span class=&quot;font-semibold&quot;&gt;&lt;%= patient.getFullName() %&gt;&lt;/span&gt;&lt;/p&gt;&#10;                                        &lt;p class=&quot;text-gray-600&quot;&gt;SS#: &lt;%= patient.getSocialSecurityNumber() %&gt;&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;p class=&quot;text-gray-600&quot;&gt;BP: &lt;%= patient.getBloodPressure() != null ? patient.getBloodPressure() : &quot;N/A&quot; %&gt;&lt;/p&gt;&#10;                                        &lt;p class=&quot;text-gray-600&quot;&gt;Temp: &lt;%= patient.getTemperature() != null ? patient.getTemperature() + &quot;°C&quot; : &quot;N/A&quot; %&gt;&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;% } %&gt;&#10;&#10;                        &lt;form action=&quot;&lt;%= request.getContextPath() %&gt;/general&quot; method=&quot;post&quot; class=&quot;space-y-4&quot;&gt;&#10;                            &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;createConsultation&quot;&gt;&#10;                            &lt;input type=&quot;hidden&quot; name=&quot;patientId&quot; value=&quot;&lt;%= patient != null ? patient.getId() : &quot;&quot; %&gt;&quot;&gt;&#10;&#10;                            &lt;div&gt;&#10;                                &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Chief Complaint (Motif)&lt;/label&gt;&#10;                                &lt;textarea name=&quot;motif&quot; rows=&quot;3&quot; required &#10;                                          placeholder=&quot;What is the patient's main concern?&quot;&#10;                                          class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div&gt;&#10;                                &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Observations&lt;/label&gt;&#10;                                &lt;textarea name=&quot;observations&quot; rows=&quot;6&quot; &#10;                                          placeholder=&quot;Clinical examination findings and observations...&quot;&#10;                                          class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;/textarea&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;button type=&quot;submit&quot; &#10;                                    class=&quot;w-full bg-green-600 text-white font-semibold py-3 rounded-lg hover:bg-green-700 transition&quot;&gt;&#10;                                Create Consultation&#10;                            &lt;/button&gt;&#10;                        &lt;/form&gt;&#10;                    &lt;/div&gt;&#10;&#10;                &lt;% } else if (&quot;viewConsultation&quot;.equals(viewMode) &amp;&amp; consultation != null) { %&gt;&#10;                    &lt;!-- View Consultation --&gt;&#10;                    &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                        &lt;h2 class=&quot;text-2xl font-bold text-gray-800 mb-6&quot;&gt;Consultation Details&lt;/h2&gt;&#10;                        &#10;                        &lt;div class=&quot;space-y-6&quot;&gt;&#10;                            &lt;div class=&quot;grid grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg&quot;&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Patient&lt;/p&gt;&#10;                                    &lt;p class=&quot;font-semibold&quot;&gt;&lt;%= consultation.getPatient().getFullName() %&gt;&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Status&lt;/p&gt;&#10;                                    &lt;span class=&quot;inline-block px-3 py-1 text-sm rounded-full &#10;                                        &lt;%= consultation.getStatus().name().equals(&quot;TERMINEE&quot;) ? &quot;bg-gray-200 text-gray-700&quot; : &#10;                                            consultation.getStatus().name().equals(&quot;EN_ATTENTE_AVIS_SPECIALISTE&quot;) ? &quot;bg-orange-200 text-orange-700&quot; : &#10;                                            &quot;bg-blue-200 text-blue-700&quot; %&gt;&quot;&gt;&#10;                                        &lt;%= consultation.getStatus().getDisplayName() %&gt;&#10;                                    &lt;/span&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Date&lt;/p&gt;&#10;                                    &lt;p class=&quot;font-semibold&quot;&gt;&lt;%= consultation.getCreatedAt().format(dateFormatter) %&gt;&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                                &lt;div&gt;&#10;                                    &lt;p class=&quot;text-sm text-gray-600&quot;&gt;Cost&lt;/p&gt;&#10;                                    &lt;p class=&quot;font-semibold&quot;&gt;&lt;%= consultation.getConsultationCost() %&gt; DH&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div&gt;&#10;                                &lt;h3 class=&quot;font-semibold text-gray-800 mb-2&quot;&gt;Motif&lt;/h3&gt;&#10;                                &lt;p class=&quot;text-gray-700&quot;&gt;&lt;%= consultation.getMotif() %&gt;&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;div&gt;&#10;                                &lt;h3 class=&quot;font-semibold text-gray-800 mb-2&quot;&gt;Observations&lt;/h3&gt;&#10;                                &lt;p class=&quot;text-gray-700&quot;&gt;&lt;%= consultation.getObservations() != null ? consultation.getObservations() : &quot;N/A&quot; %&gt;&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;&#10;                            &lt;% if (consultation.isOpen()) { %&gt;&#10;                                &lt;form action=&quot;&lt;%= request.getContextPath() %&gt;/general&quot; method=&quot;post&quot; class=&quot;space-y-4 border-t pt-4&quot;&gt;&#10;                                    &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;closeConsultation&quot;&gt;&#10;                                    &lt;input type=&quot;hidden&quot; name=&quot;consultationId&quot; value=&quot;&lt;%= consultation.getId() %&gt;&quot;&gt;&#10;&#10;                                    &lt;div&gt;&#10;                                        &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Diagnostic&lt;/label&gt;&#10;                                        &lt;textarea name=&quot;diagnostic&quot; rows=&quot;4&quot; required &#10;                                                  placeholder=&quot;Enter diagnosis...&quot;&#10;                                                  class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;%= consultation.getDiagnostic() != null ? consultation.getDiagnostic() : &quot;&quot; %&gt;&lt;/textarea&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div&gt;&#10;                                        &lt;label class=&quot;block text-sm font-semibold text-gray-700 mb-2&quot;&gt;Prescription&lt;/label&gt;&#10;                                        &lt;textarea name=&quot;prescription&quot; rows=&quot;4&quot; &#10;                                                  placeholder=&quot;Enter prescription details...&quot;&#10;                                                  class=&quot;w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500&quot;&gt;&lt;%= consultation.getPrescription() != null ? consultation.getPrescription() : &quot;&quot; %&gt;&lt;/textarea&gt;&#10;                                    &lt;/div&gt;&#10;&#10;                                    &lt;div class=&quot;flex space-x-4&quot;&gt;&#10;                                        &lt;button type=&quot;submit&quot; &#10;                                                class=&quot;flex-1 bg-green-600 text-white font-semibold py-3 rounded-lg hover:bg-green-700 transition&quot;&gt;&#10;                                            Close Consultation&#10;                                        &lt;/button&gt;&#10;                                        &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=requestExpertise&amp;consultationId=&lt;%= consultation.getId() %&gt;&quot; &#10;                                           class=&quot;flex-1 bg-orange-500 text-white font-semibold py-3 rounded-lg hover:bg-orange-600 transition text-center leading-[3rem]&quot;&gt;&#10;                                            Request Specialist&#10;                                        &lt;/a&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/form&gt;&#10;                            &lt;% } else { %&gt;&#10;                                &lt;div class=&quot;border-t pt-4&quot;&gt;&#10;                                    &lt;div class=&quot;mb-4&quot;&gt;&#10;                                        &lt;h3 class=&quot;font-semibold text-gray-800 mb-2&quot;&gt;Diagnostic&lt;/h3&gt;&#10;                                        &lt;p class=&quot;text-gray-700&quot;&gt;&lt;%= consultation.getDiagnostic() %&gt;&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                    &lt;div&gt;&#10;                                        &lt;h3 class=&quot;font-semibold text-gray-800 mb-2&quot;&gt;Prescription&lt;/h3&gt;&#10;                                        &lt;p class=&quot;text-gray-700&quot;&gt;&lt;%= consultation.getPrescription() != null ? consultation.getPrescription() : &quot;N/A&quot; %&gt;&lt;/p&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;% } %&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                &lt;% } else if (&quot;myConsultations&quot;.equals(viewMode)) { %&gt;&#10;                    &lt;!-- My Consultations List --&gt;&#10;                    &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                        &lt;h2 class=&quot;text-2xl font-bold text-gray-800 mb-6&quot;&gt;My Consultations&lt;/h2&gt;&#10;                        &#10;                        &lt;div class=&quot;mb-4 flex space-x-2&quot;&gt;&#10;                            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=myConsultations&amp;status=ALL&quot; &#10;                               class=&quot;px-4 py-2 rounded &lt;%= (status == null || &quot;ALL&quot;.equals(status)) ? &quot;bg-green-600 text-white&quot; : &quot;bg-gray-200 text-gray-700&quot; %&gt;&quot;&gt;&#10;                                All&#10;                            &lt;/a&gt;&#10;                            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=myConsultations&amp;status=EN_COURS&quot; &#10;                               class=&quot;px-4 py-2 rounded &lt;%= &quot;EN_COURS&quot;.equals(status) ? &quot;bg-green-600 text-white&quot; : &quot;bg-gray-200 text-gray-700&quot; %&gt;&quot;&gt;&#10;                                In Progress&#10;                            &lt;/a&gt;&#10;                            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=myConsultations&amp;status=EN_ATTENTE_AVIS_SPECIALISTE&quot; &#10;                               class=&quot;px-4 py-2 rounded &lt;%= &quot;EN_ATTENTE_AVIS_SPECIALISTE&quot;.equals(status) ? &quot;bg-green-600 text-white&quot; : &quot;bg-gray-200 text-gray-700&quot; %&gt;&quot;&gt;&#10;                                Awaiting Specialist&#10;                            &lt;/a&gt;&#10;                            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=myConsultations&amp;status=TERMINEE&quot; &#10;                               class=&quot;px-4 py-2 rounded &lt;%= &quot;TERMINEE&quot;.equals(status) ? &quot;bg-green-600 text-white&quot; : &quot;bg-gray-200 text-gray-700&quot; %&gt;&quot;&gt;&#10;                                Closed&#10;                            &lt;/a&gt;&#10;                        &lt;/div&gt;&#10;&#10;                        &lt;div class=&quot;space-y-3&quot;&gt;&#10;                            &lt;% if (consultations != null &amp;&amp; !consultations.isEmpty()) { %&gt;&#10;                                &lt;% for (Consultation consult : consultations) { %&gt;&#10;                                    &lt;div class=&quot;border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition&quot;&gt;&#10;                                        &lt;div class=&quot;flex justify-between items-start mb-2&quot;&gt;&#10;                                            &lt;div&gt;&#10;                                                &lt;h3 class=&quot;font-semibold text-gray-800&quot;&gt;&lt;%= consult.getPatient().getFullName() %&gt;&lt;/h3&gt;&#10;                                                &lt;p class=&quot;text-sm text-gray-600&quot;&gt;&lt;%= consult.getMotif() %&gt;&lt;/p&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;span class=&quot;text-xs px-3 py-1 rounded-full &#10;                                                &lt;%= consult.getStatus().name().equals(&quot;TERMINEE&quot;) ? &quot;bg-gray-200 text-gray-700&quot; : &#10;                                                    consult.getStatus().name().equals(&quot;EN_ATTENTE_AVIS_SPECIALISTE&quot;) ? &quot;bg-orange-200 text-orange-700&quot; : &#10;                                                    &quot;bg-blue-200 text-blue-700&quot; %&gt;&quot;&gt;&#10;                                                &lt;%= consult.getStatus().getDisplayName() %&gt;&#10;                                            &lt;/span&gt;&#10;                                        &lt;/div&gt;&#10;                                        &lt;div class=&quot;flex justify-between items-center mt-3&quot;&gt;&#10;                                            &lt;span class=&quot;text-xs text-gray-500&quot;&gt;&#10;                                                &lt;%= consult.getCreatedAt().format(dateFormatter) %&gt;&#10;                                            &lt;/span&gt;&#10;                                            &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=viewConsultation&amp;id=&lt;%= consult.getId() %&gt;&quot; &#10;                                               class=&quot;text-green-600 hover:text-green-700 text-sm font-semibold&quot;&gt;&#10;                                                View Details →&#10;                                            &lt;/a&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;% } %&gt;&#10;                            &lt;% } else { %&gt;&#10;                                &lt;div class=&quot;text-center py-12 text-gray-500&quot;&gt;&#10;                                    &lt;p&gt;No consultations found&lt;/p&gt;&#10;                                &lt;/div&gt;&#10;                            &lt;% } %&gt;&#10;                        &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;&#10;                &lt;% } else { %&gt;&#10;                    &lt;!-- Default Dashboard View --&gt;&#10;                    &lt;div class=&quot;bg-white rounded-xl shadow-md p-6&quot;&gt;&#10;                        &lt;h2 class=&quot;text-2xl font-bold text-gray-800 mb-6&quot;&gt;Recent Consultations&lt;/h2&gt;&#10;                        &#10;                        &lt;% if (recentConsultations != null &amp;&amp; !recentConsultations.isEmpty()) { %&gt;&#10;                            &lt;div class=&quot;space-y-3&quot;&gt;&#10;                                &lt;% for (Consultation consult : recentConsultations) { %&gt;&#10;                                    &lt;div class=&quot;border border-gray-200 rounded-lg p-4 hover:bg-gray-50 transition&quot;&gt;&#10;                                        &lt;div class=&quot;flex justify-between items-start&quot;&gt;&#10;                                            &lt;div class=&quot;flex-1&quot;&gt;&#10;                                                &lt;h3 class=&quot;font-semibold text-gray-800&quot;&gt;&lt;%= consult.getPatient().getFullName() %&gt;&lt;/h3&gt;&#10;                                                &lt;p class=&quot;text-sm text-gray-600 mt-1&quot;&gt;&lt;%= consult.getMotif() %&gt;&lt;/p&gt;&#10;                                                &lt;p class=&quot;text-xs text-gray-500 mt-2&quot;&gt;&#10;                                                    &lt;%= consult.getCreatedAt().format(dateFormatter) %&gt;&#10;                                                &lt;/p&gt;&#10;                                            &lt;/div&gt;&#10;                                            &lt;div class=&quot;flex flex-col items-end space-y-2&quot;&gt;&#10;                                                &lt;span class=&quot;text-xs px-3 py-1 rounded-full &#10;                                                    &lt;%= consult.getStatus().name().equals(&quot;TERMINEE&quot;) ? &quot;bg-gray-200 text-gray-700&quot; : &#10;                                                        consult.getStatus().name().equals(&quot;EN_ATTENTE_AVIS_SPECIALISTE&quot;) ? &quot;bg-orange-200 text-orange-700&quot; : &#10;                                                        &quot;bg-blue-200 text-blue-700&quot; %&gt;&quot;&gt;&#10;                                                    &lt;%= consult.getStatus().getDisplayName() %&gt;&#10;                                                &lt;/span&gt;&#10;                                                &lt;a href=&quot;&lt;%= request.getContextPath() %&gt;/general?action=viewConsultation&amp;id=&lt;%= consult.getId() %&gt;&quot; &#10;                                                   class=&quot;text-green-600 hover:text-green-700 text-sm font-semibold&quot;&gt;&#10;                                                    View →&#10;                                                &lt;/a&gt;&#10;                                            &lt;/div&gt;&#10;                                        &lt;/div&gt;&#10;                                    &lt;/div&gt;&#10;                                &lt;% } %&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;% } else { %&gt;&#10;                            &lt;div class=&quot;text-center py-12 text-gray-500&quot;&gt;&#10;                                &lt;svg class=&quot;w-20 h-20 mx-auto mb-4 text-gray-300&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; viewBox=&quot;0 0 24 24&quot;&gt;&#10;                                    &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; stroke-width=&quot;2&quot; d=&quot;M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z&quot;/&gt;&#10;                                &lt;/svg&gt;&#10;                                &lt;p&gt;No consultations yet&lt;/p&gt;&#10;                                &lt;p class=&quot;text-sm mt-2&quot;&gt;Start by selecting a patient from the waiting queue&lt;/p&gt;&#10;                            &lt;/div&gt;&#10;                        &lt;% } %&gt;&#10;                    &lt;/div&gt;&#10;                &lt;% } %&gt;&#10;            &lt;/div&gt;&#10;        &lt;/div&gt;&#10;    &lt;/div&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>